
-- 
-- id,name,support max heads,Heat channels,Temperature channels,Voltage channels,
-- # 

-- id,name,maxsupportHeads,heatchannels per head,temperturechannels per head,voltagechannels per head,half voltagechannels per head
function GetHeadBoardParam()
	return  78,"Epson_2840",4,1,1,4,0;--total 4 control unit,but share by 2 head  
end

function GetSupportHeadCount()
	return 1;
end

function GetSupportHeadList()
	return "Epson_2840";
end

-- only a heatchannel per junction 
-- hbId: headboard ID,jId: junction ID,id: NozzleLine index in head,hbs: headboard number
function GetHeatChannel(hbId,jId,id,hbs)
	return 0;
end

-- only a temperturechannel per junction
function GetTempertureChannel(hbId,jId,id,hbs)
	return  hbId*4+3-jId; -- hbId*2+jId
end

-- headId*junctions*nozzlelines + junctionId*nozzlelines + nozzlelineId
function GetDataChannel(hbId,jId,id,hbs,bReverse)
	--return hbId*2*8 +jId*8 + id;--hbId*2+math.floor(jId/2)*4+id/2
	--local a = 3-jId
	--map = {16*a+1, 16*a, 16*a+3, 16*a+2, 16*(a+1)+1, 16*(a+1), 16*(a+1)+3, 16*(a+1)+2}
	--map = {16*a, 16*a+2, 16*(a+1),16*(a+1)+2, 16*a+1, 16*a+3, 16*(a+1)+1, 16*(a+1)+3 }
	--map = {16*a+1, 16*a+3, 16*(a+1)+1, 16*(a+1)+3, 16*a, 16*a+2, 16*(a+1), 16*(a+1)+2}
	--return map[id+1] + 4*a
        map = {(3-jId)*8+6, (3-jId)*8+5, (3-jId)*8+2, (3-jId)*8+1, (3-jId)*8+7, (3-jId)*8+4, (3-jId)*8+3, (3-jId)*8}
if bReverse == 0 then
	return hbId*32+map[id+1];
else
	return hbId*32+map[7-id+1];
end 
	
end

-- note: different from datachannel
function GetVoltageChannel(hbId,jId,id,hbs)
	return hbId*4+3-jId;
end

function GetConnector(dataChn,hbs)
	local hbId;
	local jId;
	hbId = math.floor(dataChn/32);
	jId = math.floor((dataChn - hbId*32)/4);
	return hbId,jId;
end

-- left,top,width,heigth,print head center as origin
function GetHeadBoardIDRect()
	local s = 10.0;
	return  -10*s,15*s,20*s,6*s;
end

-- left,top,width,heigth,print head center as origin
function GetJunctionIDRect()
	local s = 10.0;
	return  -10*s,20*s,20*s,6*s;
end

function GetJunctionInfo()
	local y = 535;
	return 130,30,    -- w,h
			700,y, "J1105",
			505,y, "J1104",
			310,y, "J1103",
			110,y, "J1102";
end

function DrawJunction(headboardId,jId)
	local s = 10.0;
	local h = 1.6*s;
	local w = 5*s;
	local x,y;
	local str = tostring(headboardId+1).. tostring("-")..tostring(jId+1);
	
	--
	SetBrushColor(0xFFFFFF);
	--SetBrushColor(0x0);
	FillRectangle(-15*s,17*s,15*s,30*s);

	SetPenColor(0x0);
	DrawHeadBoardOutLine(-16*s,16*s,32*s,16*s,2*s);
	SetBrushColor(0x0);

	for i = 0,3,1 do
		x = -i*1.5*w + 1.75*w;
		y = 26*s + h;
		
		if( i==jId )
			then 
				FillRectangle(x,y,h,w);
			else
				DrawRectangle(x,y,h,w);
		end

	end


	SetFontSize(7.5*s);
	SetFontFamily("Arial");	
	DrawString(str,-11*s,16*s,22*s,16*s);	
	return 1;

end
