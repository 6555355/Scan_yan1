Param = {
	Junctions = 4,
	NzlsPerHead =  8,
}
-- id,name,support max heads,Heat channels,Temperature channels,Voltage channels,,half voltagechannels per head

function GetHeadBoardParam()
	return  63, "Epson_DX6",4,1,1,2,0;   --2 fullVoltages, 4 halfVoltages
end

function GetSupportHeadCount()
	return 1;
end

function GetSupportHeadList()
	return "Epson_DX6";
end

function GetHeatChannel(hbId,jId,id,hbs)
	return hbId*4+3-jId;
end

function GetTempertureChannel(hbId,jId,id,hbs)
	return hbId*4+3-jId;
end

function GetDataChannel(hbId,jId,id,hbs,bReverse)
    val = {1,0,3,2};
	if bReverse == 0 then
      return hbId*32+val[jId+1]*8+id;     
	else         
      return hbId*32+val[jId+1]*8+7-id;     
	end
end


function GetNozzleLineElecDir(nzlID)
	return 0	
end

function GetVoltageChannel(hbId,jId,id,hbs)
	--return hbId*4 + 3-jId;
	jval = {0,1,2,3};
	val = {0,0,1,1,1,1,0,0};
	return hbId*8 + jval[jId+1]*2 + val[id+1];
end

function GetConnector(dataChn,hbs)
	local hbId;
	local jId;
	hbId = math.floor(dataChn/64);
	jId = math.floor((dataChn - hbId*64)/8);
	return hbId,jId;
end

function GetHeadBoardIDRect()

	local l,t,w,h;
	local s = 10.0;
	l = -9*s;
	t = 16*s;
	w = 18*s;
	h = 6*s;
	return l,t,w,h;
end

function GetJunctionIDRect()

	local l,t,w,h;
	local s = 10.0;
	l = -9*s;
	t = 22*s;
	w = 18*s;
	h = 6*s;
	return l,t,w,h;
end

function GetJunctionInfo()

	return 230,160,    -- w,h
		  296,910,   "J1",
		  566,910,  "J2",
		  836,910,  "J3",
		  1106,910,  "J4";

end

function DrawJunction(headboardId,jId)
	local s = 10.0;
	local rt = 10*s
	local rw = 11*s;
	local rb = 18*s

	local jh = 1.1*s;
	local jw = 2.2*s;
	local x,y;
	local str = tostring(headboardId+1).. tostring("-")..tostring(jId+1);
	
	--
	SetPenColor(0x0);
	DrawHeadBoardOutLine(-rw,rt,rw*2,rb-rt,1.6*s);
	SetBrushColor(0x0);

	for i = 0,3,1 do
		x = -3*jw-3.5*jw/2 +(jw*2.8)*i;
		y = 16*s;	
		if( i==jId )
			then 
				FillRectangle(x,y,jh,jw);
			else
				DrawRectangle(x,y,jh,jw);
		end

	end

	SetFontSize(5*s);
	SetFontFamily("Arial");	
	DrawString(str,-rw,rt,2*rw,rt);
	
	return 1;
end