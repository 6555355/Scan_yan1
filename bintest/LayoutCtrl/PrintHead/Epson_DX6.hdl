
Head = {
    --
	id     = 49,
	lines   = 8,
	nozzles = 400,
	printwidth = 33.866,
	ydpi = 300,
	colors = 4,
	defaultBaseVoltage = 0.0,
	defaultAdjustVoltage = 0.0,
	defaultTemp = 0.0,
	nozzlelines = {	-- from right to left
		{	x = 0.0,    y = 0.5 },
		{	x = 1.05,   y = 0.0 },
		{	x = 8.128,    y = 0.5 },
		{	x = 9.144,   y = 0.0 },
		{	x = 16.256,   y = 0.5 },
		{	x = 17.272,  y = 0.0 },
		{	x = 24.384,   y = 0.5 },
		{	x = 25.4,  y = 0.0 }}
	
}


HeadInner = {
	h = 36, w = 36, r = 2,
}

HeadOuter = {
	h = 68, w = 68, r = 2,
}

HeadMid = {
	h = 42, w = 68, r = 2,
}


-- public 

-- id,nzl,nzls,printwidth,ydpi,corlors,bColorReflect
function GetHeadTypeInfo()
	return Head.id,Head.lines,Head.nozzles,Head.printwidth,Head.ydpi,Head.colors,1;
end

-- id,nzl,nzls,printwidth,ydpi,corlors,default Base Voltage, default adjust voltage, default temp
function GetDefaultValue()
	print(Head.defaultBaseVoltage)
	return Head.defaultBaseVoltage,Head.defaultAdjustVoltage,Head.defaultTemp;
end

-- from right to left
function GetNozzleLinePosition(id)
	return Head.nozzlelines[id+1].x,Head.nozzlelines[id+1].y;
end

function GetContourHeight()
	local s = 10.0;
	--return HeadOuter.h*s;
	return 104*s;
end

function GetContourWidth()
	local s = 10.0;
	return HeadOuter.w*s;
end


function GetInnerHeight()
	local s = 10.0;
	return HeadInner.h*s;
end

function GetInnerWidth()
	local s = 10.0;
	return HeadInner.w*s;
end

function DrawNozzleColor(colors)
	local s = 10.0;
	local w = HeadInner.w*s/2;
	local h = HeadInner.h*s/4;
	local r = HeadInner.r*s;
	local hw = Head.printwidth*s/4;

	local l4 = Head.nozzlelines[4].x*s/2;
	local dx = Head.nozzlelines[2].x*s;
	local dy = h-hw;

	SetPenColor(0x0);
	SetPenAlph(255);
	-- inner 
	SetPenWidth(3);
	DrawLine(-w,-h+r,-w,h);
	DrawQuarterCircle(-w+r,-h+r,r,1);
	DrawLine(-w+r,-h,w-r,-h);	
	DrawQuarterCircle(w-r,-h+r,r,0);
	DrawLine(w,-h+r,w,h);

	-- centr line
	SetPenWidth(1);
	DrawCenterLine(0,-h-r*2,0,h+2*r);
	DrawCenterLine(-w-r*2,h,w+r*2,h);


	-- nozzle line
	SetPenWidth(1);
	SetPenAlph(222);

	local lines = Head.lines;
	local x,y;
	local half = Head.nozzlelines[8].x*s/2; 
	local str;

	for i = 1, lines,1 do
		x = Head.nozzlelines[i].x*s - half;
		y = -hw;
		DrawCircle(x,-dy+Head.nozzlelines[i].y*2*s,0.3*s);
		DrawNozzleLine(x,-dy+Head.nozzlelines[i].y*2*s,x,h);
	end

	SetFontColor(0x0000);
	SetFontSize(2*s);
	
	SetFontFamily("Arial");
	SetBrushColor(0xFFFFFF);
	--FillRectangle(-w+r,h/10,h/3,2*w-2*r);
	
	--DrawString("1",-l4-1.5*dx,h+r/3,4*dx,24*10);

	if(colors == 1)
		then
			for i = 1, lines,1 do
				x = Head.nozzlelines[i].x*s - half - 0.5*dx;
				DrawString("1",x,h+r/3,1*dx,24*10);
			end
	
	end
	if(colors == 2)	
		then		
			for i = 1, lines,1 do
				x = Head.nozzlelines[i].x*s - half - 0.5*dx;
				if(i<5) then str = tostring(math.floor((i+1)/2));
						else str = tostring(math.floor((10-i)/2)); 
				end
				DrawString(str,x,h+r/3,1*dx,24*10);
			end
	end
	if(colors == 4)
		then
			for i = 1, lines,1 do
				x = Head.nozzlelines[i].x*s - half - 0.5*dx;
				if(i<5) then str = tostring(i);
						else str = tostring(9-i); 
				end
				DrawString(str,x,h+r/3,1*dx,24*10);
			end
	
	end

	return 1
end


function DrawHead(id,ColorCode,bReverse)
	local s = 10.0;
	local w1 = HeadInner.w*s/2;
	local h1 = HeadInner.h*s/2;
	local r1 = HeadInner.r*s;
	local hw = Head.printwidth*s/2;
	
	local l4 = Head.nozzlelines[4].x*s/2;
	local delt = Head.nozzlelines[2].x*s;

	SetPenColor(0x0);
	SetPenWidth(6);
	SetPenAlph(255);
	
	-- inner 
	
	DrawRoundedRectangle(-w1,-h1,2*h1,2*w1,r1);
		
	-- locating hole
	SetPenColor(0x606060);
	SetPenWidth(0.5);
	SetPenAlph(255);
	
	local w2 = HeadMid.w*s/2;
	local h2 = HeadMid.h*s/2;
	local r2 = HeadMid.r*s;

	DrawRoundedRectangle(-w2,-h2,2*h2,2*w2,r2);

	if(bReverse == 0)
		then
			DrawArc(-4*s,-h1-13*s,8*s,8*s,225,90);
			DrawLine(-4*0.707*s,-h1-9*s-4*0.707*s,-6*s-8*0.707*s,-h2);
			DrawLine(4*0.707*s,-h1-9*s-4*0.707*s,6*s+8*0.707*s,-h2);
			DrawCircle(0,-h1-9*s,2*s);
			DrawCircle(26*s,28*s,2*s);
			DrawCircle(-26*s,28*s,2*s);

			DrawLine(w2-5*s,h2,w2-5*s,h2+5*s);
			DrawLine(-w2+5*s,h2,-w2+5*s,h2+5*s);

			DrawLine(w2-5*s,h2+5*s,w2,h2+5*s);
			DrawLine(-w2+5*s,h2+5*s,-w2,h2+5*s);

			DrawLine(w2,h2+5*s,w2,30*s);
			DrawLine(-w2,h2+5*s,-w2,30*s);

			DrawQuarterCircle(w2-r2,30*s,2*s,3);
			DrawQuarterCircle(-w2+r2,30*s,2*s,2);
			DrawLine(-w2+r2,32*s,w2-r2,32*s);


		else
			-- revers
			DrawArc(-4*s,h1+5*s,8*s,8*s,45,90);
			DrawLine(-4*0.707*s,h1+9.*s+4*0.707*s,-6*s-8*0.707*s,h2);
			DrawLine(4*0.707*s,h1+9*s+4*0.707*s,6*s+8*0.707*s,h2);

			DrawCircle(0,h1+9*s,2*s);
			DrawCircle(26*s,-28*s,2*s);
			DrawCircle(-26*s,-28*s,2*s);

			DrawLine(w2-5*s,-h2,w2-5*s,-h2-5*s);
			DrawLine(-w2+5*s,-h2,-w2+5*s,-h2-5*s);

			DrawLine(w2-5*s,-h2-5*s,w2,-h2-5*s);
			DrawLine(-w2+5*s,-h2-5*s,-w2,-h2-5*s);

			DrawLine(w2,-h2-5*s,w2,-30*s);
			DrawLine(-w2,-h2-5*s,-w2,-30*s);

			DrawQuarterCircle(w2-r2,-30*s,2*s,0);
			DrawQuarterCircle(-w2+r2,-30*s,2*s,1);
			DrawLine(-w2+r2,-32*s,w2-r2,-32*s);
	end

	-- nozzle line
	SetPenWidth(1);
	SetPenAlph(222);

	local lines = Head.lines;
	local x,y;
	local half = Head.nozzlelines[8].x*s/2; 

	for i = 1, lines,1 do
		x = Head.nozzlelines[i].x*s - half;
		y = -hw;
		DrawNozzleLine(x,y,x,0);
	end

	-- centr line
	DrawCenterLine(0,-h2-r2*2,0,52*s+r2*4);
	DrawCenterLine(-w2-r2*2,0,w2+r2*2,0);

	-- id

	DrawArc(22*s,-h1+1.5*s,8*s,8*s,0,360);
	SetFontSize(6*s);
	DrawString(tostring(id),21*s,-h1+2.5*s,10*s,8*s);

	-- color coder
	
	SetFontColor(0x0000);
	SetFontSize(7*s);
	
	SetFontFamily("Arial");
	SetBrushColor(0xFFFFFF);
	--SetBrushColor(0x0);
	FillRectangle(-w1+r1,1*s,10*s,w1*2-2*r1);
	DrawString(ColorCode,-1.3*w1,1*s,2.6*w1,24*10);
	
	return 1;
end




