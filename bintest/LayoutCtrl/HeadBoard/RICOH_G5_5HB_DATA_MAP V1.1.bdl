-- 
-- id,name,support max heads,Heat channels,Temperature channels,Voltage channels,
-- #define HEAD_BOARD_TYPE_RICOH_GEN5_5H	  51 

-- id,name,maxsupportHeads,heatchannels per head,temperturechannels per head,voltagechannels per head,half voltagechannels per head
function GetHeadBoardParam()
	return  51,"Ricoh_Gen5",5,1,1,4,0;
end

function GetSupportHeadCount()
	return 1;
end

function GetSupportHeadList()
	return "Ricoh_Gen5";
end

-- only a heatchannel per junction 
-- hbId: headboard ID,jId: junction ID,id: NozzleLine index in head,hbs: headboard number
function GetHeatChannel(hbId,jId,id,hbs)
	return hbId*5+jId;
end

-- only a temperturechannel per junction
function GetTempertureChannel(hbId,jId,id,hbs)
	return  hbId*5+jId;
end

-- headId*junctions*nozzlelines + junctionId*nozzlelines + nozzlelineId
function GetDataChannel(hbId,jId,id,hbs)
	if bReverse == 0 then
		return hbId*16+jId*4+id;
	else
		return hbId*16+jId*4+3-id;	
	end
end

-- note: different from datachannel
function GetVoltageChannel(hbId,jId,id,hbs)
	if(id == 0) then return hbId*20+jId*4 + 0; end
	if(id == 1) then return hbId*20+jId*4 + 2; end
	if(id == 2) then return hbId*20+jId*4 + 1; end
	if(id == 3) then return hbId*20+jId*4 + 3; end

end

function GetConnector(dataChn,hbs)
	local hbId;
	local jId;
	hbId = math.floor(dataChn/20);
	jId = math.floor((dataChn - hbId*20)/4);
	return hbId,jId;
end

-- left,top,width,heigth,print head center as origin
function GetHeadBoardIDRect()
	local s = 10.0;
	return  -10*s,15*s,20*s,6*s;
end

-- left,top,width,heigth,print head center as origin
function GetJunctionIDRect()
	local s = 10.0;
	return  -10*s,20*s,20*s,6*s;
end

function GetJunctionInfo()

	return 200,80,    -- w,h
		   665,504, "J19-20",
		   665,418, "J21-22",
		   430,418, "J23-24",
		   430,504, "J25-26",
		   198,504, "J29-30";
end

function DrawJunction(headboardId,jId)
	local s = 10.0;
	local h = 1.6*s;
	local w = 4*s;
	local x,y;
	local str = tostring(headboardId+1).. tostring("-")..tostring(jId+1);
	
	--
	--SetBrushColor(0xFFFFFF);
	--FillRectangle(-15*s,50*s,6*h,3*w);

	SetPenColor(0x0);
	DrawHeadBoardOutLine(-10*s,16*s,20*s,12*s,2*s);
	SetBrushColor(0x0);

	for i = 0,4,1 do
		x = 4*s - math.floor(i/2)*6*s;
		if( i==0 or i==3 or i== 4)
			then y = 23*s + h*1.2;
			else y = 23*s;
		end
		
		if( i==jId )
			then 
				FillRectangle(x,y,h,w);
			else
				--DrawLine(x,y+h/2,x+w,y+h/2);
				DrawRectangle(x,y,h,w);
		end

	end

	SetFontSize(7.5*s);
	SetFontFamily("Arial");	
	DrawString(str,-11*s,15*s,22*s,15*s);	
	return 1;

end