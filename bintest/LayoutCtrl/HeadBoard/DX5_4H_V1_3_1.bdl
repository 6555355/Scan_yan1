-- id,name,support max heads,Heat channels,Temperature channels,Voltage channels,
-- # 

-- id,name,maxsupportHeads,heatchannels per head,temperturechannels per head,voltagechannels per head,half voltagechannels per head
function GetHeadBoardParam()
	return  36,"Epson_DX5",4,0,0,2,0;--total 4 control unit,but share by 2 head  
end

function GetSupportHeadCount()
	return 1;
end

function GetSupportHeadList()
	return "Epson_DX5";
end

-- only a heatchannel per junction 
-- hbId: headboard ID,jId: junction ID,id: NozzleLine index in head,hbs: headboard number
function GetHeatChannel(hbId,jId,id,hbs)
	return 0;
end

-- only a temperturechannel per junction
function GetTempertureChannel(hbId,jId,id,hbs)
	return  hbId*4+jId; -- hbId*2+jId
end

-- headId*junctions*nozzlelines + junctionId*nozzlelines + nozzlelineId
function GetDataChannel(hbId,jId,id,hbs)
          val = {1,0,3,2};
          --local Map = {4,1,2,7,6,3,0,5};
	return hbId*4*8 +val[jId+1]*8 +id;--hbId*2+math.floor(jId/2)*4+id/2
end

-- note: different from datachannel
function GetVoltageChannel(hbId,jId,id,hbs)
	--return hbId*16+jId*4 + math.floor((7-id)/2);
	--return 1;
    --return hbId*4+jId;
	return hbId*8+math.floor(jId/2)*4+ math.floor((7-id)/2);
end

function GetConnector(dataChn,hbs)
	local hbId;
	local jId;
	hbId = math.floor(dataChn/16);
	jId = math.floor((dataChn - hbId*16)/8);
	return hbId,jId;
end

-- left,top,width,heigth,print head center as origin
function GetHeadBoardIDRect()
	local s = 10.0;
	return  -15*s,9*s,30*s,6*s;
end

-- left,top,width,heigth,print head center as origin
function GetJunctionIDRect()
	local s = 10.0;
	return  -15*s,15*s,30*s,6*s;
end

function GetJunctionInfo()

	return 230,160,    -- w,h
		  296,710,   "J1", 
		  566,710,  "J2",
		  836,710,  "J3",
		  1106,710,  "J4";
end


function DrawJunction(headboardId,jId)
	local s = 10.0;
	local rt = 10*s
	local rw = 11*s;
	local rb = 18*s

	local jh = 1.1*s;
	local jw = 2.2*s;
	local x,y;
	local str = tostring(headboardId+1).. tostring("-")..tostring(jId+1);
	
	--
	SetPenColor(0x0);
	DrawHeadBoardOutLine(-rw,rt,rw*2,rb-rt,1.6*s);
	SetBrushColor(0x0);

	for i = 0,3,1 do
		x = -3*jw-3.5*jw/2 +(jw*2.8)*i;
		y = 16*s;	
		if( i==jId )
			then 
				FillRectangle(x,y,jh,jw);
			else
				DrawRectangle(x,y,jh,jw);
		end

	end

	SetFontSize(5*s);
	SetFontFamily("Arial");	
	DrawString(str,-rw,rt,2*rw,rt);
	
	return 1;
end
